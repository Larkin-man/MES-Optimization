{TODO 2 :
При нажатии Расчет. Добавление деталей происходит в срр файле. 
сначала нужно:
1 алгоритм джонсона для Н станков
2 диаграмма ганта с несколькими блоками}
{TODO 5 :
2 списка убрать
Node *Item = PushBack(Record,pItem);
          Node *Itemn = PushBack(NotOptimal,pItem);}
{TODO 5 -oОткрыть : Механизм отсеивания букв и символов не являющихся символами}
{TODO 4 : Сделать инфо для кнопок}
{TODO 4 : Таблица сравнения методов}
{TODO 2 -oГант :
КНОПКИ НА ДИАГРАММЕ ГАНТА:
1) Обновить (перерисовать)
2) Переключится в основное окно
3) Цвет}
{TODO 2 -cте же данные : Оптимизация должна работать}
{TODO 3 -oпереносить переменные -cАлгоритм в3 : Метод ПС должен сделать вывод}
{DONE 2 -oпереносить переменные  : Новое окно для ввода параметров}
{TODO 1 -cАлгоритм в3 : МЕТОД ВЕТВЕЙ И ГРАНИЦ}
{TODO 2 : Возможность ввести таблицу вручную}
{TODO 2 : Алгоритм Джонсона для первого и последнего станка. Учавствуют все станки}
{TODO 4 : Диаграмма Ганта для метода ПС и других}
{TODO 4 : решить ситуацию с копированием}
{TODO 5 : добавить функцию: транспонировать матрицу (входную)}
{DONE oпередумал 2 : сделать станов: н деталей: к добавить удалить}
{TODO 4 : ДОБАВАИТЬ ОТкрыть пример если нет файлов усов}
{TODO -cте же данные -же данные 3 : Повторный щелчек на Расчет}
{TODO 5 : Сделать цвет блока цвет фона цвет заливка для диаграммы}
{DONE 3 -cНаучится переносить переменные : Поменять интерфейс}
{DONE 1 : Продумать повторное нажатие на кнопку Расчет, и другие}
{TODO 5  -cкатег       2 списка убрать
Node *Item = PushBack(Record,pItem);
          Node *Itemn = PushBack(NotOptimal,pItem);
}
